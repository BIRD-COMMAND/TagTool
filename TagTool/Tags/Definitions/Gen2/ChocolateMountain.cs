using TagTool.Cache;
using TagTool.Common;
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using static TagTool.Tags.TagFieldFlags;

namespace TagTool.Tags.Definitions.Gen2
{
    [TagStructure(Name = "chocolate_mountain", Tag = "gldf", Size = 0x8)]
    public class ChocolateMountain : TagStructure
    {
        public List<LightingVariablesBlock> LightingVariables;
        
        [TagStructure(Size = 0x90)]
        public class LightingVariablesBlock : TagStructure
        {
            public ObjectAffectedValue ObjectAffected;
            public float LightmapBrightnessOffset;
            public PrimaryLightStructBlock PrimaryLight;
            public SecondaryLightStructBlock SecondaryLight;
            public AmbientLightStructBlock AmbientLight;
            public LightmapShadowsStructBlock LightmapShadows;
            
            [Flags]
            public enum ObjectAffectedValue : uint
            {
                All = 1 << 0,
                Biped = 1 << 1,
                Vehicle = 1 << 2,
                Weapon = 1 << 3,
                Equipment = 1 << 4,
                Garbage = 1 << 5,
                Projectile = 1 << 6,
                Scenery = 1 << 7,
                Machine = 1 << 8,
                Control = 1 << 9,
                LightFixture = 1 << 10,
                SoundScenery = 1 << 11,
                Crate = 1 << 12,
                Creature = 1 << 13
            }
            
            [TagStructure(Size = 0x24)]
            public class PrimaryLightStructBlock : TagStructure
            {
                public RealRgbColor MinLightmapColor;
                public RealRgbColor MaxLightmapColor;
                /// <summary>
                /// degrees from up the direct light cannot be
                /// </summary>
                public float ExclusionAngleFromUp;
                /// <summary>
                /// input: accuracy, output: primary light scale
                /// </summary>
                public MappingFunctionBlock Function;
                
                [TagStructure(Size = 0x8)]
                public class MappingFunctionBlock : TagStructure
                {
                    public List<ByteBlock> Data;
                    
                    [TagStructure(Size = 0x1)]
                    public class ByteBlock : TagStructure
                    {
                        public sbyte Value;
                    }
                }
            }
            
            [TagStructure(Size = 0x3C)]
            public class SecondaryLightStructBlock : TagStructure
            {
                public RealRgbColor MinLightmapColor;
                public RealRgbColor MaxLightmapColor;
                public RealRgbColor MinDiffuseSample;
                public RealRgbColor MaxDiffuseSample;
                /// <summary>
                /// degrees
                /// </summary>
                public float ZAxisRotation;
                /// <summary>
                /// input: accuracy, output: secondary light scale
                /// </summary>
                public MappingFunctionBlock Function;
                
                [TagStructure(Size = 0x8)]
                public class MappingFunctionBlock : TagStructure
                {
                    public List<ByteBlock> Data;
                    
                    [TagStructure(Size = 0x1)]
                    public class ByteBlock : TagStructure
                    {
                        public sbyte Value;
                    }
                }
            }
            
            [TagStructure(Size = 0x20)]
            public class AmbientLightStructBlock : TagStructure
            {
                public RealRgbColor MinLightmapSample;
                public RealRgbColor MaxLightmapSample;
                /// <summary>
                /// Ambient light scale. (left side min brightness, right side max brightness). Before this scale it determines a global
                /// ambient scale, which added to either light will total ~1.0 scale. Then this scale modifies that.
                /// </summary>
                public MappingFunctionBlock Function;
                
                [TagStructure(Size = 0x8)]
                public class MappingFunctionBlock : TagStructure
                {
                    public List<ByteBlock> Data;
                    
                    [TagStructure(Size = 0x1)]
                    public class ByteBlock : TagStructure
                    {
                        public sbyte Value;
                    }
                }
            }
            
            [TagStructure(Size = 0x8)]
            public class LightmapShadowsStructBlock : TagStructure
            {
                /// <summary>
                /// Shadows generated by the lightmaps get direction from lightmap primary incoming light direction and darken based on how
                /// accurate that light is fed into the function below
                /// </summary>
                public MappingFunctionBlock Function1;
                
                [TagStructure(Size = 0x8)]
                public class MappingFunctionBlock : TagStructure
                {
                    public List<ByteBlock> Data;
                    
                    [TagStructure(Size = 0x1)]
                    public class ByteBlock : TagStructure
                    {
                        public sbyte Value;
                    }
                }
            }
        }
    }
}

