<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{42814DEE-5A94-4901-BDA9-28AFD2D4F5AC}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>TagTool</RootNamespace>
    <AssemblyName>TagTool</AssemblyName>
    <TargetFramework>net48</TargetFramework>
    <FileAlignment>512</FileAlignment>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>
    <EnableDefaultNoneItems>false</EnableDefaultNoneItems>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <NoWarn>CS1591</NoWarn>
    <LangVersion>7.3</LangVersion>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>
  <PropertyGroup>
    <ApplicationIcon>TagTool.ico</ApplicationIcon>
    <RunPostBuildEvent>OnOutputUpdated</RunPostBuildEvent>
  </PropertyGroup>
  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Content Include="TagTool.ico" />
    <Compile Remove="Audio\PlatformCustomPlayback.cs" />
    <Compile Remove="Audio\PlaybackParameterStruct.cs" />
    <Compile Remove="Audio\SoundImportType.cs" />
    <Compile Remove="Audio\SoundPermutationLanguagesBlock.cs" />
    <Compile Remove="Audio\SoundPromotionStruct.cs" />
    <Compile Remove="Audio\SoundSampleRate.cs" />
    <Compile Remove="Audio\SoundScaleModifier.cs" />
    <Compile Remove="Commands\Porting\PortArmorVariantCommand.cs" />
    <Compile Remove="Commands\Tags\ConvertTagCommand.cs" />
    <Compile Remove="Common\RealMatrix3x3.cs" />
    <Compile Remove="VideoUtils.cs" />
    <None Include="App.config" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="JsonMoppNet">
      <HintPath>..\Tools\JsonMoppNet.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Data.Entity.Design" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ShaderGenerator\HaloShaderGenerator\HaloShaderGenerator.csproj" />
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <PackageReference Include="AssimpNet" Version="4.1.0" />
    <PackageReference Include="lz4net" Version="1.0.15.93" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Scripting" Version="4.6.0" />
    <PackageReference Include="Poly2Tri.NetStandard" Version="1.0.2" />
  </ItemGroup>
  <ItemDefinitionGroup>
    <ReferenceCopyLocalPaths>
      <DestinationSubDirectory>Tools\</DestinationSubDirectory>
    </ReferenceCopyLocalPaths>
  </ItemDefinitionGroup>
  <PropertyGroup>
    <PostBuildEvent>cd $(ProjectDir)$(OutDir)
xcopy "$(ProjectDir)..\Physics" "Physics" /e /i /h /Y /d
xcopy "$(ProjectDir)..\Tools" "Tools" /e /i /h /Y /d
xcopy "$(ProjectDir)..\ShaderGenerator\HaloShaderGenerator\bin\x64\$(ConfigurationName)" "Tools" /e /i /h /Y /d

IF "$(PlatformName)" == "x64" (
    del "Tools\meshoptimizer32.dll"
    ren "Tools\meshoptimizer64.dll" meshoptimizer.dll
    del "Tools\fmod.dll"
    ren "Tools\fmod64.dll" fmod.dll
) ELSE (
    del "Tools\meshoptimizer64.dll"
    ren "Tools\meshoptimizer32.dll" meshoptimizer.dll
    del "Tools\fmod64.dll"
)

:: md  "Tools\scripting"
:: for /f "eol=: delims=" %25%25F in ('dir /b^|find "System"') do move /Y "%25%25F" "Tools\scripting"
:: for /f "eol=: delims=" %25%25F in ('dir /b^|find "Microsoft.CodeAnalysis"') do move /Y "%25%25F" "Tools\scripting"

cd $(ProjectDir)
if ERRORLEVEL == 0 (
    xcopy "$(ProjectDir)..\Tools\HaloShaderGenerator.dll" "$(ProjectDir)$(OutDir)" /e /i /h /Y /d 2&gt;nul 1&gt;nul
    SET ERRORLEVEL=0
)
EXIT %25ERRORLEVEL%25</PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <Target Name="RemoveSatelliteAssemblies" AfterTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <ReferenceCopyLocalPaths Remove="@(ReferenceSatellitePaths)" />
    </ItemGroup>
  </Target>
</Project>