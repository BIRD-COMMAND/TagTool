using System.Collections.Generic;
using System.IO;
using TagTool.Cache.HaloOnline;
using TagTool.Cache;
using TagTool.Common;
using TagTool.Shaders;
using TagTool.Tags.Definitions;
using TagTool.Tags;

namespace TagTool.MtnDewIt.Commands.GenerateCache.Tags
{
    public class levels_ui_mainmenu_sky_ui_area_screen_effect : TagFile
    {
        public levels_ui_mainmenu_sky_ui_area_screen_effect(GameCache cache, GameCacheHaloOnline cacheContext, Stream stream) : base
        (
            cache,
            cacheContext,
            stream
        )
        {
            Cache = cache;
            CacheContext = cacheContext;
            Stream = stream;
            TagData();
        }

        public override void TagData()
        {
            var tag = GetCachedTag<AreaScreenEffect>($@"levels\ui\mainmenu\sky\ui");
            var sefc = CacheContext.Deserialize<AreaScreenEffect>(Stream, tag);
            sefc.ScreenEffects = new List<AreaScreenEffect.ScreenEffectBlock>
            {
                new AreaScreenEffect.ScreenEffectBlock
                {
                    MaximumDistance = 1E+19f,
                    DistanceFalloffFunction = new TagFunction
                    {
                        Data = new byte[]
                        {
                            0x08, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 
                            0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0xCD, 
                            0x5C, 0x8F, 0xA2, 0x3E, 0xB3, 0x92, 0x29, 0xC2, 0xAE, 0x5B, 
                            0x57, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 
                            0x07, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x7F, 0x7F, 0x3E, 0x16, 
                            0x53, 0xC0, 0x0F, 0x1E, 0x18, 0x41, 0xEF, 0x02, 0x15, 0xC1, 
                            0xBE, 0xA9, 0x46, 0x40, 
                        }
                    },
                    Lifetime = 1E+19f,
                    TimeEvolutionFunction = new TagFunction
                    {
                        Data = new byte[]
                        {
                            0x08, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 
                            0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0xCD, 
                            0x33, 0x33, 0x33, 0x3F, 0x7C, 0xCC, 0x3F, 0xC0, 0x57, 0x42, 
                            0x06, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 
                            0x07, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x7F, 0x7F, 0x0A, 0x08, 
                            0x67, 0x42, 0xC8, 0xD5, 0x10, 0xC3, 0x12, 0xCB, 0xE8, 0x42, 
                            0x1A, 0x8E, 0xEA, 0xC1, 
                        }
                    },
                    AngleFalloffFunction = new TagFunction
                    {
                        Data = new byte[]
                        {
                            0x01, 0x34, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 
                            0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 
                        }
                    },
                    Desaturation = 1f,
                    GammaReduce = 0.1f,
                    ColorFilter = new RealRgbColor(0.06666667f, 0.101960786f, 0.26666668f),
                },
            };

            CacheContext.Serialize(Stream, tag, sefc);
        }
    }
}
