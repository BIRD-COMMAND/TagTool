using TagTool.Cache;
using TagTool.Cache.HaloOnline;
using TagTool.Common;
using TagTool.Tags.Definitions;
using System.IO;

namespace TagTool.MtnDewIt.Commands.GenerateCache.Tags 
{
    public class globals_input_globals : TagFile
    {
        public globals_input_globals(GameCache cache, GameCacheHaloOnline cacheContext, Stream stream) : base
        (
            cache,
            cacheContext,
            stream
        )
        {
            Cache = cache;
            CacheContext = cacheContext;
            Stream = stream;
            TagData();
        }

        public override void TagData()
        {
            var tag = GetCachedTag<InputGlobals>($@"globals\input_globals");
            var inpg = Cache.Deserialize<InputGlobals>(Stream, tag);
            inpg.Unknown = 4;
            inpg.Unknown2 = 128;
            inpg.Unknown3 = new byte[]
            {
                0x08, 0x34, 0x00, 0x00, 0xCD, 0xCC, 0xCC, 0x3D, 0x00, 0x00,
                0x20, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00,
                0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xCD,
                0xFF, 0xFF, 0x7F, 0x7F, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00,
                0x00, 0x00,
            };
            inpg.Unknown4 = new byte[]
            {
                0x08, 0x35, 0x00, 0x00, 0x6F, 0x12, 0x83, 0x3A, 0xA6, 0x9B,
                0x44, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00,
                0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xCD,
                0x9A, 0x99, 0x19, 0x3E, 0xB4, 0x97, 0x50, 0x40, 0x00, 0x00,
                0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xF6, 0x28, 0x9C, 0x3E,
                0xEE, 0xBD, 0xF7, 0x3F, 0xF8, 0x54, 0x4B, 0x3E, 0x04, 0x00,
                0x00, 0x00, 0x71, 0x3D, 0x1A, 0x3F, 0xC9, 0xC8, 0xC8, 0x3E,
                0x00, 0x56, 0x2B, 0x3F, 0x04, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0x7F, 0x7F, 0x66, 0x4C, 0x73, 0x3E, 0xE7, 0x2C, 0x43, 0x3F,
                0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xCD, 0xCD, 0xCC,
                0xCC, 0x3E, 0x00, 0x00, 0x80, 0x3E, 0x00, 0x00, 0x00, 0x00,
                0x04, 0x00, 0x00, 0x00, 0xE1, 0x7A, 0x34, 0x3F, 0x6E, 0xDE,
                0xA7, 0x3E, 0x27, 0x29, 0xFF, 0xBC, 0x04, 0x00, 0x00, 0x00,
                0x9A, 0x99, 0x59, 0x3F, 0x2E, 0xF6, 0x01, 0x40, 0x5A, 0xA5,
                0x9D, 0xBF, 0x04, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x7F, 0x7F,
                0x29, 0xB4, 0x57, 0x40, 0x29, 0xB4, 0x17, 0xC0,
            };
            inpg.Unknown5 = 500;

            CacheContext.Serialize(Stream, tag, inpg);
        }
    }
}
